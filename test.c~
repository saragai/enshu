#include<stdio.h>
#include<cv.h>
#include<highgui.h>
#include<math.h>
#include<ctype.h>

#include<GL/glut.h> 

void display();

GLunit texture[1];

int LoadGLTextures(IplImage *image){
  glGenTextures(1, &texture[0]);
  glBindTexture(GL_TEXTURE_2D, texture[0]);
  glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_LINEAR);
  glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_LINEAR);
  
  glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB,image->width,image->height, 0,GL_BGR_EXT,GL_UNSIGNED_BYTE,image->imageData);

  cvReleaseImage( &image );
  
  return 1;
};

int main(){
  IplImage *src_img=0;
  CvCapture *capture=0;

  capture = cvCreateCameraCapture(0);
  src_img = cvQueryFrame(capture);

  glutInit(&argc,argv);
  glutInitDisplayMode(GLUT_RGBA| GLUT_DOUBLE | GLUT_DEPTH);
  glutCreateWindow(“Image”);
  glutDisplayFunc(display);
  glutMainLoop();

  return 0;
}

void display(){
  glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
  LoadGLTextures();
  glEnable(GL_TEXTURE_2D);
  glBegin(GL_QUADS);
  glTexCoord2d(0.0, 1.0);
  glVertex2d(-1,1);
  glTexCoord2d(0.0, 0.0);
  glVertex2d(-1,-1);
  glTexCoord2d(1.0, 0.0);
  glVertex2d(1,-1);
  glTexCoord2d(1.0, 1.0);
  glVertex2d(1,1);
  glEnd();
  glDisable(GL_TEXTURE_2D);
  glutSwapBuffers();
}
